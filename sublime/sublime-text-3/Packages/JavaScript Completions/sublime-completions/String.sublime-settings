{"scope":"source.js","completions":[["replace\t( searchValue: string, replaceValue: string ): string String","replace(${1:searchValue: string}, ${2:replaceValue: string})"],["lastIndexOf\t( searchString: string, position?: int ): int String","lastIndexOf(${1:searchString: string}, ${2:position?: int})"],["indexOf\t( searchString: string, position?: int ): int String","indexOf(${1:searchString: string}, ${2:position?: int})"],["split\t( separator: string, limit: int ): string String","split(${1:separator: string}, ${2:limit: int})"],["String_fromCharCode\t( chars...: int ): string String","String.fromCharCode(${1:chars...: int})"],["substring\t( start: int, end: int ): string String","substring(${1:start: int}, ${2:end: int})"],["slice\t( start: int, end: int ): string String","slice(${1:start: int}, ${2:end: int})"],["fromCharCode\t( chars_..: int ): string String","fromCharCode(${1:chars...: int})"],["concat\t( strings_..: string ): string String","concat(${1:strings...: string})"],["localeCompare\t( that: string ): int String","localeCompare(${1:that: string})"],["String\t( value: any ): String String","new String(${1:value: any})"],["String\t( value: any ): String String","String(${1:value: any})"],["toLocaleUpperCase\t(): string String","toLocaleUpperCase()"],["match\t( regexp: any ): Array String","match(${1:regexp: any})"],["charCodeAt\t( pos: int ): int String","charCodeAt(${1:pos: int})"],["toLocaleLowerCase\t(): string String","toLocaleLowerCase()"],["charAt\t( pos: int ): string String","charAt(${1:pos: int})"],["search\t( regexp: any ): int String","search(${1:regexp: any})"],["toLowerCase\t(): string String","toLowerCase()"],["toUpperCase\t(): string String","toUpperCase()"],["toString\t(): string String","toString()"],["valueOf\t(): string String","valueOf()"],["trim\t(): string String","trim()"],["length\t: int String","length"]]}
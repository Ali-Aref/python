{"scope":"source.js","completions":[["description-XMLHttpRequest\tXMLHttpRequest",{"name":"XMLHttpRequest","return_type":"XMLHttpRequest","parameters":[],"description":"The XMLHttpRequest() constructor initiates an XMLHttpRequest. It must be called before any other method calls.","type":"constructor","url_doc":"https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/XMLHttpRequest","full_description":"/*\n\n\tXMLHttpRequest\n\n\tXMLHttpRequest ( )\n\n\tReturn Type:\n\tXMLHttpRequest\n\n\tDescription:\n\tThe XMLHttpRequest() constructor initiates an XMLHttpRequest. It must be called before any other method calls.\n\n\tURL doc:\n\thttps://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/XMLHttpRequest\n\n*/"}],["description-open\tXMLHttpRequest",{"name":"open","return_type":"void","parameters":[{"name":"method","type":"DOMString","is_optional":false,"description":"The HTTP method to use, such as \"GET\", \"POST\", \"PUT\", \"DELETE\", etc. Ignored for non-HTTP(S) URLs."},{"name":"url","type":"DOMString","is_optional":false,"description":"The URL to send the request to."},{"name":"async","type":"boolean","is_optional":true,"description":"An optional boolean parameter, defaulting to true, indicating whether or not to perform the operation asynchronously. If this value is false, the send()method does not return until the response is received. If true, notification of a completed transaction is provided using event listeners. This must be true if the multipart attribute is true, or an exception will be thrown."},{"name":"user","type":"DOMString","is_optional":true,"description":"The optional user name to use for authentication purposes; by default, this is an empty string."},{"name":"password","type":"DOMString","is_optional":true,"description":"The optional password to use for authentication purposes; by default, this is an empty string."}],"description":"The XMLHttpRequest.open() method initializes a request. This method is to be used from JavaScript code; to initialize a request from native code, use openRequest() instead.","type":"operation","url_doc":"https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/open","full_description":"/*\n\n\tXMLHttpRequest\n\n\topen ( method: DOMString, url: DOMString, async?: boolean, user?: DOMString, password?: DOMString )\n\n\tReturn Type:\n\tvoid\n\n\tDescription:\n\tThe XMLHttpRequest.open() method initializes a request. This method is to be used from JavaScript code; to initialize a request from native code, use openRequest() instead.\n\n\tURL doc:\n\thttps://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/open\n\n*/"}],["description-setRequestHeader\tXMLHttpRequest",{"name":"setRequestHeader","return_type":"void","parameters":[{"name":"header","type":"DOMString","is_optional":false,"description":"The name of the header whose value is to be set."},{"name":"value","type":"DOMString","is_optional":false,"description":"The value to set as the body of the header."}],"description":"The XMLHttpRequest.setRequestHeader() method sets the value of an HTTP request header. You must call setRequestHeader()after open(), but before send(). If this method is called several times with the same header, the values are merged into one single request header.","type":"operation","url_doc":"https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/setRequestHeader","full_description":"/*\n\n\tXMLHttpRequest\n\n\tsetRequestHeader ( header: DOMString, value: DOMString )\n\n\tReturn Type:\n\tvoid\n\n\tDescription:\n\tThe XMLHttpRequest.setRequestHeader() method sets the value of an HTTP request header. You must call setRequestHeader()after open(), but before send(). If this method is called several times with the same header, the values are merged into one single request header.\n\n\tURL doc:\n\thttps://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/setRequestHeader\n\n*/"}],["description-overrideMimeType\tXMLHttpRequest",{"name":"overrideMimeType","return_type":"void","parameters":[{"name":"mimetype","type":"DOMString","is_optional":false,"description":"The name of the mimetype whose value is to be set."}],"description":"The XMLHttpRequest.overrideMimeType() method overrides the MIME type returned by the server. This may be used, for example, to force a stream to be treated and parsed as text/xml, even if the server does not report it as such. This method must be called before send().","type":"operation","url_doc":"https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/overrideMimeType","full_description":"/*\n\n\tXMLHttpRequest\n\n\toverrideMimeType ( mimetype: DOMString )\n\n\tReturn Type:\n\tvoid\n\n\tDescription:\n\tThe XMLHttpRequest.overrideMimeType() method overrides the MIME type returned by the server. This may be used, for example, to force a stream to be treated and parsed as text/xml, even if the server does not report it as such. This method must be called before send().\n\n\tURL doc:\n\thttps://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/overrideMimeType\n\n*/"}],["description-getResponseHeader\tXMLHttpRequest",{"name":"getResponseHeader","return_type":"ByteString","parameters":[{"name":"name","type":"ByteString","is_optional":false,"description":"A ByteString representing the name of the header you want to return the text value of."}],"description":"The XMLHttpRequest.getResponseHeader() method returns the string containing the text of the specified header. If there are multiple response headers with the same name, then their values are returned as a single concatenated string, where each value is separated from the previous one by a pair of comma and space. The getResponseHeader() method returns the value as a UTF byte squence. The search for the header name is case-insensitive.","type":"operation","url_doc":"https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/getResponseHeader","full_description":"/*\n\n\tXMLHttpRequest\n\n\tgetResponseHeader ( name: ByteString )\n\n\tReturn Type:\n\tByteString\n\n\tDescription:\n\tThe XMLHttpRequest.getResponseHeader() method returns the string containing the text of the specified header. If there are multiple response headers with the same name, then their values are returned as a single concatenated string, where each value is separated from the previous one by a pair of comma and space. The getResponseHeader() method returns the value as a UTF byte squence. The search for the header name is case-insensitive.\n\n\tURL doc:\n\thttps://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/getResponseHeader\n\n*/"}],["description-getAllResponseHeaders\tXMLHttpRequest",{"name":"getAllResponseHeaders","return_type":"ByteString","parameters":[],"description":"The XMLHttpRequest.getAllResponseHeaders() method returns all the response headers, separated by CRLF, as a string, or null if no response has been received.","type":"operation","url_doc":"https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/getAllResponseHeaders","full_description":"/*\n\n\tXMLHttpRequest\n\n\tgetAllResponseHeaders ( )\n\n\tReturn Type:\n\tByteString\n\n\tDescription:\n\tThe XMLHttpRequest.getAllResponseHeaders() method returns all the response headers, separated by CRLF, as a string, or null if no response has been received.\n\n\tURL doc:\n\thttps://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/getAllResponseHeaders\n\n*/"}],["description-onreadystatechange\tXMLHttpRequest",{"name":"onreadystatechange","return_type":"void","description":"An EventHandler that is called whenever the readyState attribute changes. The callback is called from the user interface thread. The XMLHttpRequest.onreadystatechange property contains the event handler to be called when the readystatechange event is fired, that is every time the readyState property of the XMLHttpRequest changes. The callback is called from the user interface thread.","type":"property","url_doc":"https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/onreadystatechange","full_description":"/*\n\n\tXMLHttpRequest\n\n\tonreadystatechange\n\n\tReturn Type:\n\tvoid\n\n\tDescription:\n\tAn EventHandler that is called whenever the readyState attribute changes. The callback is called from the user interface thread. The XMLHttpRequest.onreadystatechange property contains the event handler to be called when the readystatechange event is fired, that is every time the readyState property of the XMLHttpRequest changes. The callback is called from the user interface thread.\n\n\tURL doc:\n\thttps://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/onreadystatechange\n\n*/"}],["description-withCredentials\tXMLHttpRequest",{"name":"withCredentials","return_type":"boolean","description":"The XMLHttpRequest.withCredentials property is a Boolean that indicates whether or not cross-site Access-Control requests should be made using credentials such as cookies, authorization headers or TLS client certificates. Setting withCredentials has no effect on same-site requests.","type":"property","url_doc":"https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/withCredentials","full_description":"/*\n\n\tXMLHttpRequest\n\n\twithCredentials\n\n\tReturn Type:\n\tboolean\n\n\tDescription:\n\tThe XMLHttpRequest.withCredentials property is a Boolean that indicates whether or not cross-site Access-Control requests should be made using credentials such as cookies, authorization headers or TLS client certificates. Setting withCredentials has no effect on same-site requests.\n\n\tURL doc:\n\thttps://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/withCredentials\n\n*/"}],["description-send\tXMLHttpRequest",{"name":"send","return_type":"void","parameters":[{"name":"data","type":"ArrayBufferView|Blob|Document|DOMString|FormData","is_optional":true,"description":""}],"description":"The XMLHttpRequest.send() method sends the request. If the request is asynchronous (which is the default), this method returns as soon as the request is sent. If the request is synchronous, this method doesn't return until the response has arrived. send() accepts an optional argument for the request body. If the request method is GET or HEAD, the argument is ignored and request body is set to null.","type":"operation","url_doc":"https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/send","full_description":"/*\n\n\tXMLHttpRequest\n\n\tsend ( data?: ArrayBufferView|Blob|Document|DOMString|FormData )\n\n\tReturn Type:\n\tvoid\n\n\tDescription:\n\tThe XMLHttpRequest.send() method sends the request. If the request is asynchronous (which is the default), this method returns as soon as the request is sent. If the request is synchronous, this method doesn't return until the response has arrived. send() accepts an optional argument for the request body. If the request method is GET or HEAD, the argument is ignored and request body is set to null.\n\n\tURL doc:\n\thttps://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/send\n\n*/"}],["description-responseType\tXMLHttpRequest",{"name":"responseType","return_type":"any","description":"The XMLHttpRequest.responseType property is an enumerated value that returns the type of the response. It also lets the author change the response type to one \"arraybuffer\", \"blob\", \"document\", \"json\", or \"text\". If an empty string is set as the value of responseType, it is assumed as type \"text\".","type":"property","url_doc":"https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/responseType","full_description":"/*\n\n\tXMLHttpRequest\n\n\tresponseType\n\n\tReturn Type:\n\tany\n\n\tDescription:\n\tThe XMLHttpRequest.responseType property is an enumerated value that returns the type of the response. It also lets the author change the response type to one \"arraybuffer\", \"blob\", \"document\", \"json\", or \"text\". If an empty string is set as the value of responseType, it is assumed as type \"text\".\n\n\tURL doc:\n\thttps://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/responseType\n\n*/"}],["description-responseText\tXMLHttpRequest",{"name":"responseText","return_type":"DOMString","description":"The XMLHttpRequest.responseText property returns a DOMString that contains the response to the request as text, or null if the request was unsuccessful or has not yet been sent. The responseText property will have the partial response as it arrives even before the request is complete. If responseType is set to anything other than the empty string or \"text\", accessing responseText will throw InvalidStateError exception.","type":"property","url_doc":"https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/responseText","full_description":"/*\n\n\tXMLHttpRequest\n\n\tresponseText\n\n\tReturn Type:\n\tDOMString\n\n\tDescription:\n\tThe XMLHttpRequest.responseText property returns a DOMString that contains the response to the request as text, or null if the request was unsuccessful or has not yet been sent. The responseText property will have the partial response as it arrives even before the request is complete. If responseType is set to anything other than the empty string or \"text\", accessing responseText will throw InvalidStateError exception.\n\n\tURL doc:\n\thttps://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/responseText\n\n*/"}],["description-responseXML\tXMLHttpRequest",{"name":"responseXML","return_type":"Document","description":"The XMLHttpRequest.responseXML property returns a Document containing the response to the request, or null if the request was unsuccessful, has not yet been sent, or cannot be parsed as XML or HTML. The response is parsed as if it were a text/xml stream. When the responseType is set to \"document\" and the request has been made asynchronously, the response is parsed as a text/html stream. responseXML is null for data: URLs.","type":"property","url_doc":"https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/responseXML","full_description":"/*\n\n\tXMLHttpRequest\n\n\tresponseXML\n\n\tReturn Type:\n\tDocument\n\n\tDescription:\n\tThe XMLHttpRequest.responseXML property returns a Document containing the response to the request, or null if the request was unsuccessful, has not yet been sent, or cannot be parsed as XML or HTML. The response is parsed as if it were a text/xml stream. When the responseType is set to \"document\" and the request has been made asynchronously, the response is parsed as a text/html stream. responseXML is null for data: URLs.\n\n\tURL doc:\n\thttps://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/responseXML\n\n*/"}],["description-readyState\tXMLHttpRequest",{"name":"readyState","return_type":"unsigned short","description":"The XMLHttpRequest.readyState property returns the state an XMLHttpRequest client is in.","type":"property","url_doc":"https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/readyState","full_description":"/*\n\n\tXMLHttpRequest\n\n\treadyState\n\n\tReturn Type:\n\tunsigned short\n\n\tDescription:\n\tThe XMLHttpRequest.readyState property returns the state an XMLHttpRequest client is in.\n\n\tURL doc:\n\thttps://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/readyState\n\n*/"}],["description-statusText\tXMLHttpRequest",{"name":"statusText","return_type":"DOMString","description":"The XMLHttpRequest.statusText property returns a DOMString containing the response's status message as returned by the HTTP server. Unlike XMLHTTPRequest.status which indicates a numerical status code, this property contains the text of the response status, such as \"OK\" or \"Not Found\". If the request's readyState is in UNSENT or OPENED state, the value of statusText will be an empty string.","type":"property","url_doc":"https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/statusText","full_description":"/*\n\n\tXMLHttpRequest\n\n\tstatusText\n\n\tReturn Type:\n\tDOMString\n\n\tDescription:\n\tThe XMLHttpRequest.statusText property returns a DOMString containing the response's status message as returned by the HTTP server. Unlike XMLHTTPRequest.status which indicates a numerical status code, this property contains the text of the response status, such as \"OK\" or \"Not Found\". If the request's readyState is in UNSENT or OPENED state, the value of statusText will be an empty string.\n\n\tURL doc:\n\thttps://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/statusText\n\n*/"}],["description-timeout\tXMLHttpRequest",{"name":"timeout","return_type":"unsigned long","description":"The XMLHttpRequest.timeout property is an unsigned long representing the number of milliseconds a request can take before automatically being terminated. The default value is 0, which means there is no timeout. Timeout shouldn't be used for synchronous XMLHttpRequests requests used in a document environment or it will throw an InvalidAccessError exception. When a timeout happens, a timeout event is fired.","type":"property","url_doc":"https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/timeout","full_description":"/*\n\n\tXMLHttpRequest\n\n\ttimeout\n\n\tReturn Type:\n\tunsigned long\n\n\tDescription:\n\tThe XMLHttpRequest.timeout property is an unsigned long representing the number of milliseconds a request can take before automatically being terminated. The default value is 0, which means there is no timeout. Timeout shouldn't be used for synchronous XMLHttpRequests requests used in a document environment or it will throw an InvalidAccessError exception. When a timeout happens, a timeout event is fired.\n\n\tURL doc:\n\thttps://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/timeout\n\n*/"}],["description-response\tXMLHttpRequest",{"name":"response","return_type":"any","description":"The XMLHttpRequest.response property returns the response's body. It can be of the type ArrayBuffer, Blob, Document, JavaScript object, or a DOMString, depending of the value of XMLHttpRequest.responseType property. Value of response is null if the request is not complete or was not successful. However, if the value of responseType was set to \"text\" or the empty string, response can contain the partial text response while the request is still in the loading state.","type":"property","url_doc":"https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/response","full_description":"/*\n\n\tXMLHttpRequest\n\n\tresponse\n\n\tReturn Type:\n\tany\n\n\tDescription:\n\tThe XMLHttpRequest.response property returns the response's body. It can be of the type ArrayBuffer, Blob, Document, JavaScript object, or a DOMString, depending of the value of XMLHttpRequest.responseType property. Value of response is null if the request is not complete or was not successful. However, if the value of responseType was set to \"text\" or the empty string, response can contain the partial text response while the request is still in the loading state.\n\n\tURL doc:\n\thttps://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/response\n\n*/"}],["description-ontimeout\tXMLHttpRequest",{"name":"ontimeout","return_type":"void","description":"The timeout event is fired when Progression is terminated due to preset time expiring.","type":"property","url_doc":"https://developer.mozilla.org/en-US/docs/Web/Events/timeout","full_description":"/*\n\n\tXMLHttpRequest\n\n\tontimeout\n\n\tReturn Type:\n\tvoid\n\n\tDescription:\n\tThe timeout event is fired when Progression is terminated due to preset time expiring.\n\n\tURL doc:\n\thttps://developer.mozilla.org/en-US/docs/Web/Events/timeout\n\n*/"}],["description-abort\tXMLHttpRequest",{"name":"abort","return_type":"void","parameters":[],"description":"The XMLHttpRequest.abort() method aborts the request if it has already been sent. When a request is aborted, its readyState is set to 0 (UNSENT), but the readystatechange event is not fired.","type":"operation","url_doc":"https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/abort","full_description":"/*\n\n\tXMLHttpRequest\n\n\tabort ( )\n\n\tReturn Type:\n\tvoid\n\n\tDescription:\n\tThe XMLHttpRequest.abort() method aborts the request if it has already been sent. When a request is aborted, its readyState is set to 0 (UNSENT), but the readystatechange event is not fired.\n\n\tURL doc:\n\thttps://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/abort\n\n*/"}],["description-upload\tXMLHttpRequest",{"name":"upload","return_type":"XMLHttpRequestUpload","description":"The XMLHttpRequest.upload property returns an XMLHttpRequestUpload object, representing the upload process. It is an opaque object, but being an XMLHttpRequestEventTarget, event listeners can be set on it to track its process.","type":"property","url_doc":"https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/upload","full_description":"/*\n\n\tXMLHttpRequest\n\n\tupload\n\n\tReturn Type:\n\tXMLHttpRequestUpload\n\n\tDescription:\n\tThe XMLHttpRequest.upload property returns an XMLHttpRequestUpload object, representing the upload process. It is an opaque object, but being an XMLHttpRequestEventTarget, event listeners can be set on it to track its process.\n\n\tURL doc:\n\thttps://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/upload\n\n*/"}],["description-status\tXMLHttpRequest",{"name":"status","return_type":"unsigned short","description":"The XMLHttpRequest.status property returns the numerical status code of the response of the XMLHttpRequest. status will be an unsigned short. Before the request is complete, the value of status will be 0. It is worth noting that browsers report a status of 0 in case of XMLHttpRequest errors too.","type":"property","url_doc":"https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/status","full_description":"/*\n\n\tXMLHttpRequest\n\n\tstatus\n\n\tReturn Type:\n\tunsigned short\n\n\tDescription:\n\tThe XMLHttpRequest.status property returns the numerical status code of the response of the XMLHttpRequest. status will be an unsigned short. Before the request is complete, the value of status will be 0. It is worth noting that browsers report a status of 0 in case of XMLHttpRequest errors too.\n\n\tURL doc:\n\thttps://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/status\n\n*/"}]]}
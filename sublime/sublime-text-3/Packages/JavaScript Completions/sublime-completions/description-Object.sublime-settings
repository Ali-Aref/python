{"scope":"source.js","completions":[["description-Object_getOwnPropertyNames\tObject",{"name":"getOwnPropertyNames","return_type":"string[]","parameters":[{"name":"o","type":"Object","is_optional":false,"description":""}],"description":"15.2.3.4\r\n            Object.getOwnPropertyNames ( O )\r\n\r\n        When the getOwnPropertyNames function is called, the following steps are taken:\r\n\r\n        \r\n          If Type(O) is not Object throw a TypeError exception.\r\n          Let array be the result of creating a new object as if by the expression new Array () where\r\n              Array is the standard built-in constructor with that name.\r\n          Let n be 0.\r\n          For each named own property P of O\r\n            \r\n              Let name be the String value that is the name of P.\r\n              Call the [[DefineOwnProperty]] internal method of array with arguments ToString(n), the PropertyDescriptor {[[Value]]: name, [[Writable]]:\r\n                  true, [[Enumerable]]: true, [[Configurable]]: true}, and false.\r\n              Increment n by 1.\r\n            \r\n          \r\n          Return array.\r\n        \r\n\r\n        \r\n          NOTE If O is a String instance, the set of own properties processed in step 4\r\n          includes the implicit properties defined in 15.5.5.2 that correspond to character positions\r\n          within the object’s [[PrimitiveValue]] String.","is_static":true,"type":"operation","url_doc":"http://www.ecma-international.org/ecma-262/5.1/#sec-15.2.3.4","full_description":"/*\n\n\tObject\n\n\tgetOwnPropertyNames ( o: Object )\n\n\tReturn Type:\n\tstring[]\n\n\tDescription:\n\t15.2.3.4\r\n            Object.getOwnPropertyNames ( O )\r\n\r\n        When the getOwnPropertyNames function is called, the following steps are taken:\r\n\r\n        \r\n          If Type(O) is not Object throw a TypeError exception.\r\n          Let array be the result of creating a new object as if by the expression new Array () where\r\n              Array is the standard built-in constructor with that name.\r\n          Let n be 0.\r\n          For each named own property P of O\r\n            \r\n              Let name be the String value that is the name of P.\r\n              Call the [[DefineOwnProperty]] internal method of array with arguments ToString(n), the PropertyDescriptor {[[Value]]: name, [[Writable]]:\r\n                  true, [[Enumerable]]: true, [[Configurable]]: true}, and false.\r\n              Increment n by 1.\r\n            \r\n          \r\n          Return array.\r\n        \r\n\r\n        \r\n          NOTE If O is a String instance, the set of own properties processed in step 4\r\n          includes the implicit properties defined in 15.5.5.2 that correspond to character positions\r\n          within the object’s [[PrimitiveValue]] String.\n\n\tURL doc:\n\thttp://www.ecma-international.org/ecma-262/5.1/#sec-15.2.3.4\n\n*/"}],["description-toLocaleString\tObject",{"name":"toLocaleString","return_type":"string","parameters":[],"description":"15.2.4.3\r\n            Object.prototype.toLocaleString ( )\r\n\r\n        When the toLocaleString method is called, the following steps are taken:\r\n\r\n        \r\n          Let O be the result of calling ToObject passing the this value as the\r\n              argument.\r\n          Let toString be the result of calling the [[Get]] internal method of O passing \"toString\" as\r\n              the argument.\r\n          If IsCallable(toString) is false, throw a TypeError exception.\r\n          Return the result of calling the [[Call]] internal method of toString passing O as the this\r\n              value and no arguments.\r\n        \r\n\r\n        \r\n          NOTE 1 This function is provided to give all Objects a generic toLocaleString\r\n          interface, even though not all may use it. Currently, Array, Number, and Date\r\n          provide their own locale-sensitive toLocaleString methods.\r\n        \r\n\r\n        \r\n          NOTE 2 The first parameter to this function is likely to be used in a future version of this\r\n          standard; it is recommended that implementations do not use this parameter position for anything else.","is_static":false,"type":"operation","url_doc":"http://www.ecma-international.org/ecma-262/5.1/#sec-15.2.4.3","full_description":"/*\n\n\tObject\n\n\ttoLocaleString ()\n\n\tReturn Type:\n\tstring\n\n\tDescription:\n\t15.2.4.3\r\n            Object.prototype.toLocaleString ( )\r\n\r\n        When the toLocaleString method is called, the following steps are taken:\r\n\r\n        \r\n          Let O be the result of calling ToObject passing the this value as the\r\n              argument.\r\n          Let toString be the result of calling the [[Get]] internal method of O passing \"toString\" as\r\n              the argument.\r\n          If IsCallable(toString) is false, throw a TypeError exception.\r\n          Return the result of calling the [[Call]] internal method of toString passing O as the this\r\n              value and no arguments.\r\n        \r\n\r\n        \r\n          NOTE 1 This function is provided to give all Objects a generic toLocaleString\r\n          interface, even though not all may use it. Currently, Array, Number, and Date\r\n          provide their own locale-sensitive toLocaleString methods.\r\n        \r\n\r\n        \r\n          NOTE 2 The first parameter to this function is likely to be used in a future version of this\r\n          standard; it is recommended that implementations do not use this parameter position for anything else.\n\n\tURL doc:\n\thttp://www.ecma-international.org/ecma-262/5.1/#sec-15.2.4.3\n\n*/"}],["description-Object_keys\tObject",{"name":"keys","return_type":"string[]","parameters":[{"name":"o","type":"Object","is_optional":false,"description":""}],"description":"15.2.3.14 Object.keys ( O )\r\n\r\n        When the keys function is called with argument O, the following steps are taken:\r\n\r\n        \r\n          If the Type(O) is not Object, throw a TypeError exception.\r\n          Let n be the number of own enumerable properties of O\r\n          Let array be the result of creating a new Object as if by the expression new Array(n) where\r\n              Array is the standard built-in constructor with that name.\r\n          Let index be 0.\r\n          For each own enumerable property of O whose name String is P\r\n            \r\n              Call the [[DefineOwnProperty]] internal method of array with arguments ToString(index), the PropertyDescriptor {[[Value]]: P, [[Writable]]:\r\n                  true, [[Enumerable]]: true, [[Configurable]]: true}, and false.\r\n              Increment index by 1.\r\n            \r\n          \r\n          Return array.\r\n        \r\n\r\n        If an implementation defines a specific order of enumeration for the for-in statement, that same enumeration order must\r\n        be used in step 5 of this algorithm.","is_static":true,"type":"operation","url_doc":"http://www.ecma-international.org/ecma-262/5.1/#sec-15.2.3.14","full_description":"/*\n\n\tObject\n\n\tkeys ( o: Object )\n\n\tReturn Type:\n\tstring[]\n\n\tDescription:\n\t15.2.3.14 Object.keys ( O )\r\n\r\n        When the keys function is called with argument O, the following steps are taken:\r\n\r\n        \r\n          If the Type(O) is not Object, throw a TypeError exception.\r\n          Let n be the number of own enumerable properties of O\r\n          Let array be the result of creating a new Object as if by the expression new Array(n) where\r\n              Array is the standard built-in constructor with that name.\r\n          Let index be 0.\r\n          For each own enumerable property of O whose name String is P\r\n            \r\n              Call the [[DefineOwnProperty]] internal method of array with arguments ToString(index), the PropertyDescriptor {[[Value]]: P, [[Writable]]:\r\n                  true, [[Enumerable]]: true, [[Configurable]]: true}, and false.\r\n              Increment index by 1.\r\n            \r\n          \r\n          Return array.\r\n        \r\n\r\n        If an implementation defines a specific order of enumeration for the for-in statement, that same enumeration order must\r\n        be used in step 5 of this algorithm.\n\n\tURL doc:\n\thttp://www.ecma-international.org/ecma-262/5.1/#sec-15.2.3.14\n\n*/"}],["description-propertyIsEnumerable\tObject",{"name":"propertyIsEnumerable","return_type":"boolean","parameters":[{"name":"p","type":"string","is_optional":false,"description":""}],"description":"15.2.4.7\r\n            Object.prototype.propertyIsEnumerable (V)\r\n\r\n        When the propertyIsEnumerable method is called with argument V, the following steps are\r\n        taken:\r\n\r\n        \r\n          Let P be ToString(V).\r\n          Let O be the result of calling ToObject passing the this value as the\r\n              argument.\r\n          Let desc be the result of calling the [[GetOwnProperty]] internal method of O passing P as the\r\n              argument.\r\n          If desc is undefined, return false.\r\n          Return the value of desc.[[Enumerable]].\r\n        \r\n\r\n        \r\n          NOTE 1 This method does not consider objects in the prototype chain.\r\n        \r\n\r\n        \r\n          NOTE 2 The ordering of steps 1 and 2 is chosen to ensure that any exception that would have\r\n          been thrown by step 1 in previous editions of this specification will continue to be thrown even if the this\r\n          value is undefined or null.","is_static":false,"type":"operation","url_doc":"http://www.ecma-international.org/ecma-262/5.1/#sec-15.2.4.7","full_description":"/*\n\n\tObject\n\n\tpropertyIsEnumerable ( p: string )\n\n\tReturn Type:\n\tboolean\n\n\tDescription:\n\t15.2.4.7\r\n            Object.prototype.propertyIsEnumerable (V)\r\n\r\n        When the propertyIsEnumerable method is called with argument V, the following steps are\r\n        taken:\r\n\r\n        \r\n          Let P be ToString(V).\r\n          Let O be the result of calling ToObject passing the this value as the\r\n              argument.\r\n          Let desc be the result of calling the [[GetOwnProperty]] internal method of O passing P as the\r\n              argument.\r\n          If desc is undefined, return false.\r\n          Return the value of desc.[[Enumerable]].\r\n        \r\n\r\n        \r\n          NOTE 1 This method does not consider objects in the prototype chain.\r\n        \r\n\r\n        \r\n          NOTE 2 The ordering of steps 1 and 2 is chosen to ensure that any exception that would have\r\n          been thrown by step 1 in previous editions of this specification will continue to be thrown even if the this\r\n          value is undefined or null.\n\n\tURL doc:\n\thttp://www.ecma-international.org/ecma-262/5.1/#sec-15.2.4.7\n\n*/"}],["description-hasOwnProperty\tObject",{"name":"hasOwnProperty","return_type":"boolean","parameters":[{"name":"property","type":"string","is_optional":false,"description":""}],"description":"15.2.4.5\r\n            Object.prototype.hasOwnProperty (V)\r\n\r\n        When the hasOwnProperty method is called with argument V, the following steps are taken:\r\n\r\n        \r\n          Let P be ToString(V).\r\n          Let O be the result of calling ToObject passing the this value as the\r\n              argument.\r\n          Let desc be the result of calling the [[GetOwnProperty]] internal method of O passing P as the\r\n              argument.\r\n          If desc is undefined, return false.\r\n          Return true.\r\n        \r\n\r\n        \r\n          NOTE 1 Unlike [[HasProperty]] (8.12.6), this method does not\r\n          consider objects in the prototype chain.\r\n        \r\n\r\n        \r\n          NOTE 2 The ordering of steps 1 and 2 is chosen to ensure that any exception that would have\r\n          been thrown by step 1 in previous editions of this specification will continue to be thrown even if the this\r\n          value is undefined or null.","is_static":false,"type":"operation","url_doc":"http://www.ecma-international.org/ecma-262/5.1/#sec-15.2.4.5","full_description":"/*\n\n\tObject\n\n\thasOwnProperty ( property: string )\n\n\tReturn Type:\n\tboolean\n\n\tDescription:\n\t15.2.4.5\r\n            Object.prototype.hasOwnProperty (V)\r\n\r\n        When the hasOwnProperty method is called with argument V, the following steps are taken:\r\n\r\n        \r\n          Let P be ToString(V).\r\n          Let O be the result of calling ToObject passing the this value as the\r\n              argument.\r\n          Let desc be the result of calling the [[GetOwnProperty]] internal method of O passing P as the\r\n              argument.\r\n          If desc is undefined, return false.\r\n          Return true.\r\n        \r\n\r\n        \r\n          NOTE 1 Unlike [[HasProperty]] (8.12.6), this method does not\r\n          consider objects in the prototype chain.\r\n        \r\n\r\n        \r\n          NOTE 2 The ordering of steps 1 and 2 is chosen to ensure that any exception that would have\r\n          been thrown by step 1 in previous editions of this specification will continue to be thrown even if the this\r\n          value is undefined or null.\n\n\tURL doc:\n\thttp://www.ecma-international.org/ecma-262/5.1/#sec-15.2.4.5\n\n*/"}],["description-Object_freeze\tObject",{"name":"freeze","return_type":"Object","parameters":[{"name":"o","type":"Object","is_optional":false,"description":""}],"description":"15.2.3.9 Object.freeze ( O )\r\n\r\n        When the freeze function is called, the following steps are taken:\r\n\r\n        \r\n          If Type(O) is not Object throw a TypeError exception.\r\n          For each named own property name P of O,\r\n            \r\n              Let desc be the result of calling the [[GetOwnProperty]] internal method of O with P.\r\n              If IsDataDescriptor(desc) is true, then\r\n                \r\n                  If desc.[[Writable]] is true, set desc.[[Writable]] to false.\r\n                \r\n              \r\n              If desc.[[Configurable]] is true, set desc.[[Configurable]] to false.\r\n              Call the [[DefineOwnProperty]] internal method of O with P, desc, and true as\r\n                  arguments.\r\n            \r\n          \r\n          Set the [[Extensible]] internal property of O to false.\r\n          Return O.","is_static":true,"type":"operation","url_doc":"http://www.ecma-international.org/ecma-262/5.1/#sec-15.2.3.9","full_description":"/*\n\n\tObject\n\n\tfreeze ( o: Object )\n\n\tReturn Type:\n\tObject\n\n\tDescription:\n\t15.2.3.9 Object.freeze ( O )\r\n\r\n        When the freeze function is called, the following steps are taken:\r\n\r\n        \r\n          If Type(O) is not Object throw a TypeError exception.\r\n          For each named own property name P of O,\r\n            \r\n              Let desc be the result of calling the [[GetOwnProperty]] internal method of O with P.\r\n              If IsDataDescriptor(desc) is true, then\r\n                \r\n                  If desc.[[Writable]] is true, set desc.[[Writable]] to false.\r\n                \r\n              \r\n              If desc.[[Configurable]] is true, set desc.[[Configurable]] to false.\r\n              Call the [[DefineOwnProperty]] internal method of O with P, desc, and true as\r\n                  arguments.\r\n            \r\n          \r\n          Set the [[Extensible]] internal property of O to false.\r\n          Return O.\n\n\tURL doc:\n\thttp://www.ecma-international.org/ecma-262/5.1/#sec-15.2.3.9\n\n*/"}],["description-isPrototypeOf\tObject",{"name":"isPrototypeOf","return_type":"boolean","parameters":[{"name":"o","type":"Object","is_optional":false,"description":""}],"description":"15.2.4.6\r\n            Object.prototype.isPrototypeOf (V)\r\n\r\n        When the isPrototypeOf method is called with argument V, the following steps are taken:\r\n\r\n        \r\n          If V is not an object, return false.\r\n          Let O be the result of calling ToObject passing the this value as the\r\n              argument.\r\n          Repeat\r\n            \r\n              Let V be the value of the [[Prototype]] internal property of V.\r\n              if V is null, return false\r\n              If O and V refer to the same object, return true.\r\n            \r\n          \r\n        \r\n\r\n        \r\n          NOTE The ordering of steps 1 and 2 is chosen to preserve the behaviour specified by previous\r\n          editions of this specification for the case where V is not an object and the this value is undefined or null.","is_static":false,"type":"operation","url_doc":"http://www.ecma-international.org/ecma-262/5.1/#sec-15.2.4.6","full_description":"/*\n\n\tObject\n\n\tisPrototypeOf ( o: Object )\n\n\tReturn Type:\n\tboolean\n\n\tDescription:\n\t15.2.4.6\r\n            Object.prototype.isPrototypeOf (V)\r\n\r\n        When the isPrototypeOf method is called with argument V, the following steps are taken:\r\n\r\n        \r\n          If V is not an object, return false.\r\n          Let O be the result of calling ToObject passing the this value as the\r\n              argument.\r\n          Repeat\r\n            \r\n              Let V be the value of the [[Prototype]] internal property of V.\r\n              if V is null, return false\r\n              If O and V refer to the same object, return true.\r\n            \r\n          \r\n        \r\n\r\n        \r\n          NOTE The ordering of steps 1 and 2 is chosen to preserve the behaviour specified by previous\r\n          editions of this specification for the case where V is not an object and the this value is undefined or null.\n\n\tURL doc:\n\thttp://www.ecma-international.org/ecma-262/5.1/#sec-15.2.4.6\n\n*/"}],["description-Object_isFrozen\tObject",{"name":"isFrozen","return_type":"boolean","parameters":[{"name":"o","type":"Object","is_optional":false,"description":""}],"description":"15.2.3.12 Object.isFrozen ( O\r\n            )\r\n\r\n        When the isFrozen function is called with argument O, the following steps are taken:\r\n\r\n        \r\n          If Type(O) is not Object throw a TypeError exception.\r\n          For each named own property name P of O,\r\n            \r\n              Let desc be the result of calling the [[GetOwnProperty]] internal method of O with P.\r\n              If IsDataDescriptor(desc) is true then\r\n                \r\n                  If desc.[[Writable]] is true, return false.\r\n                \r\n              \r\n              If desc.[[Configurable]] is true, then return false.\r\n            \r\n          \r\n          If the [[Extensible]] internal property of O is false, then return true.\r\n          Otherwise, return false.","is_static":true,"type":"operation","url_doc":"http://www.ecma-international.org/ecma-262/5.1/#sec-15.2.3.12","full_description":"/*\n\n\tObject\n\n\tisFrozen ( o: Object )\n\n\tReturn Type:\n\tboolean\n\n\tDescription:\n\t15.2.3.12 Object.isFrozen ( O\r\n            )\r\n\r\n        When the isFrozen function is called with argument O, the following steps are taken:\r\n\r\n        \r\n          If Type(O) is not Object throw a TypeError exception.\r\n          For each named own property name P of O,\r\n            \r\n              Let desc be the result of calling the [[GetOwnProperty]] internal method of O with P.\r\n              If IsDataDescriptor(desc) is true then\r\n                \r\n                  If desc.[[Writable]] is true, return false.\r\n                \r\n              \r\n              If desc.[[Configurable]] is true, then return false.\r\n            \r\n          \r\n          If the [[Extensible]] internal property of O is false, then return true.\r\n          Otherwise, return false.\n\n\tURL doc:\n\thttp://www.ecma-international.org/ecma-262/5.1/#sec-15.2.3.12\n\n*/"}],["description-Object_seal\tObject",{"name":"seal","return_type":"Object","parameters":[{"name":"o","type":"Object","is_optional":false,"description":""}],"description":"15.2.3.8 Object.seal ( O )\r\n\r\n        When the seal function is called, the following steps are taken:\r\n\r\n        \r\n          If Type(O) is not Object throw a TypeError exception.\r\n          For each named own property name P of O,\r\n            \r\n              Let desc be the result of calling the [[GetOwnProperty]] internal method of O with P.\r\n              If desc.[[Configurable]] is true, set desc.[[Configurable]] to false.\r\n              Call the [[DefineOwnProperty]] internal method of O with P, desc, and true as\r\n                  arguments.\r\n            \r\n          \r\n          Set the [[Extensible]] internal property of O to false.\r\n          Return O.","is_static":true,"type":"operation","url_doc":"http://www.ecma-international.org/ecma-262/5.1/#sec-15.2.3.8","full_description":"/*\n\n\tObject\n\n\tseal ( o: Object )\n\n\tReturn Type:\n\tObject\n\n\tDescription:\n\t15.2.3.8 Object.seal ( O )\r\n\r\n        When the seal function is called, the following steps are taken:\r\n\r\n        \r\n          If Type(O) is not Object throw a TypeError exception.\r\n          For each named own property name P of O,\r\n            \r\n              Let desc be the result of calling the [[GetOwnProperty]] internal method of O with P.\r\n              If desc.[[Configurable]] is true, set desc.[[Configurable]] to false.\r\n              Call the [[DefineOwnProperty]] internal method of O with P, desc, and true as\r\n                  arguments.\r\n            \r\n          \r\n          Set the [[Extensible]] internal property of O to false.\r\n          Return O.\n\n\tURL doc:\n\thttp://www.ecma-international.org/ecma-262/5.1/#sec-15.2.3.8\n\n*/"}],["description-Object_isSealed\tObject",{"name":"isSealed","return_type":"boolean","parameters":[{"name":"o","type":"Object","is_optional":false,"description":""}],"description":"15.2.3.11 Object.isSealed ( O\r\n            )\r\n\r\n        When the isSealed function is called with argument O, the following steps are taken:\r\n\r\n        \r\n          If Type(O) is not Object throw a TypeError exception.\r\n          For each named own property name P of O,\r\n            \r\n              Let desc be the result of calling the [[GetOwnProperty]] internal method of O with P.\r\n              If desc.[[Configurable]] is true, then return false.\r\n            \r\n          \r\n          If the [[Extensible]] internal property of O is false, then return true.\r\n          Otherwise, return false.","is_static":true,"type":"operation","url_doc":"http://www.ecma-international.org/ecma-262/5.1/#sec-15.2.3.11","full_description":"/*\n\n\tObject\n\n\tisSealed ( o: Object )\n\n\tReturn Type:\n\tboolean\n\n\tDescription:\n\t15.2.3.11 Object.isSealed ( O\r\n            )\r\n\r\n        When the isSealed function is called with argument O, the following steps are taken:\r\n\r\n        \r\n          If Type(O) is not Object throw a TypeError exception.\r\n          For each named own property name P of O,\r\n            \r\n              Let desc be the result of calling the [[GetOwnProperty]] internal method of O with P.\r\n              If desc.[[Configurable]] is true, then return false.\r\n            \r\n          \r\n          If the [[Extensible]] internal property of O is false, then return true.\r\n          Otherwise, return false.\n\n\tURL doc:\n\thttp://www.ecma-international.org/ecma-262/5.1/#sec-15.2.3.11\n\n*/"}],["description-valueOf\tObject",{"name":"valueOf","return_type":"Object","parameters":[],"description":"15.2.4.4 Object.prototype.valueOf\r\n            ( )\r\n\r\n        When the valueOf method is called, the following steps are taken:\r\n\r\n        \r\n          Let O be the result of calling ToObject passing the this value as the\r\n              argument.\r\n          If O is the result of calling the Object constructor with a host object (15.2.2.1), then\r\n            \r\n              Return either O or another value such as the host object originally passed to the constructor. The\r\n                  specific result that is returned is implementation-defined.\r\n            \r\n          \r\n          Return O.","is_static":false,"type":"operation","url_doc":"http://www.ecma-international.org/ecma-262/5.1/#sec-15.2.4.4","full_description":"/*\n\n\tObject\n\n\tvalueOf ()\n\n\tReturn Type:\n\tObject\n\n\tDescription:\n\t15.2.4.4 Object.prototype.valueOf\r\n            ( )\r\n\r\n        When the valueOf method is called, the following steps are taken:\r\n\r\n        \r\n          Let O be the result of calling ToObject passing the this value as the\r\n              argument.\r\n          If O is the result of calling the Object constructor with a host object (15.2.2.1), then\r\n            \r\n              Return either O or another value such as the host object originally passed to the constructor. The\r\n                  specific result that is returned is implementation-defined.\r\n            \r\n          \r\n          Return O.\n\n\tURL doc:\n\thttp://www.ecma-international.org/ecma-262/5.1/#sec-15.2.4.4\n\n*/"}],["description-toString\tObject",{"name":"toString","return_type":"string","parameters":[],"description":"15.2.4.2\r\n            Object.prototype.toString ( )\r\n\r\n        When the toString method is called, the following steps are taken:\r\n\r\n        \r\n          If the this value is undefined, return \"[object Undefined]\".\r\n          If the this value is null, return \"[object Null]\".\r\n          Let O be the result of calling ToObject passing the this value as the\r\n              argument.\r\n          Let class be the value of the [[Class]] internal property of O.\r\n          Return the String value that is the result of concatenating the three Strings \"[object \", class,\r\n              and \"]\".","is_static":false,"type":"operation","url_doc":"http://www.ecma-international.org/ecma-262/5.1/#sec-15.2.4.2","full_description":"/*\n\n\tObject\n\n\ttoString ()\n\n\tReturn Type:\n\tstring\n\n\tDescription:\n\t15.2.4.2\r\n            Object.prototype.toString ( )\r\n\r\n        When the toString method is called, the following steps are taken:\r\n\r\n        \r\n          If the this value is undefined, return \"[object Undefined]\".\r\n          If the this value is null, return \"[object Null]\".\r\n          Let O be the result of calling ToObject passing the this value as the\r\n              argument.\r\n          Let class be the value of the [[Class]] internal property of O.\r\n          Return the String value that is the result of concatenating the three Strings \"[object \", class,\r\n              and \"]\".\n\n\tURL doc:\n\thttp://www.ecma-international.org/ecma-262/5.1/#sec-15.2.4.2\n\n*/"}],["description-Object_getOwnPropertyDescriptor\tObject",{"name":"getOwnPropertyDescriptor","return_type":"Object","parameters":[{"name":"o","type":"Object","is_optional":false,"description":""},{"name":"p","type":"string","is_optional":false,"description":""}],"description":"15.2.3.3\r\n            Object.getOwnPropertyDescriptor ( O, P )\r\n\r\n        When the getOwnPropertyDescriptor function is called, the following steps are taken:\r\n\r\n        \r\n          If Type(O) is not Object throw a TypeError exception.\r\n          Let name be ToString(P).\r\n          Let desc be the result of calling the [[GetOwnProperty]] internal method of O with argument\r\n              name.\r\n          Return the result of calling FromPropertyDescriptor(desc) (8.10.4).","is_static":true,"type":"operation","url_doc":"http://www.ecma-international.org/ecma-262/5.1/#sec-15.2.3.3","full_description":"/*\n\n\tObject\n\n\tgetOwnPropertyDescriptor ( o: Object, p: string )\n\n\tReturn Type:\n\tObject\n\n\tDescription:\n\t15.2.3.3\r\n            Object.getOwnPropertyDescriptor ( O, P )\r\n\r\n        When the getOwnPropertyDescriptor function is called, the following steps are taken:\r\n\r\n        \r\n          If Type(O) is not Object throw a TypeError exception.\r\n          Let name be ToString(P).\r\n          Let desc be the result of calling the [[GetOwnProperty]] internal method of O with argument\r\n              name.\r\n          Return the result of calling FromPropertyDescriptor(desc) (8.10.4).\n\n\tURL doc:\n\thttp://www.ecma-international.org/ecma-262/5.1/#sec-15.2.3.3\n\n*/"}],["description-Object_preventExtensions\tObject",{"name":"preventExtensions","return_type":"Object","parameters":[{"name":"o","type":"Object","is_optional":false,"description":""}],"description":"15.2.3.10\r\n            Object.preventExtensions ( O )\r\n\r\n        When the preventExtensions function is called, the following steps are taken:\r\n\r\n        \r\n          If Type(O) is not Object throw a TypeError exception.\r\n          Set the [[Extensible]] internal property of O to false.\r\n          Return O.","is_static":true,"type":"operation","url_doc":"http://www.ecma-international.org/ecma-262/5.1/#sec-15.2.3.10","full_description":"/*\n\n\tObject\n\n\tpreventExtensions ( o: Object )\n\n\tReturn Type:\n\tObject\n\n\tDescription:\n\t15.2.3.10\r\n            Object.preventExtensions ( O )\r\n\r\n        When the preventExtensions function is called, the following steps are taken:\r\n\r\n        \r\n          If Type(O) is not Object throw a TypeError exception.\r\n          Set the [[Extensible]] internal property of O to false.\r\n          Return O.\n\n\tURL doc:\n\thttp://www.ecma-international.org/ecma-262/5.1/#sec-15.2.3.10\n\n*/"}],["description-Object_isExtensible\tObject",{"name":"isExtensible","return_type":"boolean","parameters":[{"name":"o","type":"Object","is_optional":false,"description":""}],"description":"15.2.3.13 Object.isExtensible (\r\n            O )\r\n\r\n        When the isExtensible function is called with argument O, the following steps are taken:\r\n\r\n        \r\n          If Type(O) is not Object throw a TypeError exception.\r\n          Return the Boolean value of the [[Extensible]] internal property of O.","is_static":true,"type":"operation","url_doc":"http://www.ecma-international.org/ecma-262/5.1/#sec-15.2.3.13","full_description":"/*\n\n\tObject\n\n\tisExtensible ( o: Object )\n\n\tReturn Type:\n\tboolean\n\n\tDescription:\n\t15.2.3.13 Object.isExtensible (\r\n            O )\r\n\r\n        When the isExtensible function is called with argument O, the following steps are taken:\r\n\r\n        \r\n          If Type(O) is not Object throw a TypeError exception.\r\n          Return the Boolean value of the [[Extensible]] internal property of O.\n\n\tURL doc:\n\thttp://www.ecma-international.org/ecma-262/5.1/#sec-15.2.3.13\n\n*/"}],["description-Object_getPrototypeOf\tObject",{"name":"getPrototypeOf","return_type":"Object","parameters":[{"name":"o","type":"Object","is_optional":false,"description":""}],"description":"15.2.3.2 Object.getPrototypeOf (\r\n            O )\r\n\r\n        When the getPrototypeOf function is called with argument O, the following steps are taken:\r\n\r\n        \r\n          If Type(O) is not Object throw a TypeError exception.\r\n          Return the value of the [[Prototype]] internal property of O.","is_static":true,"type":"operation","url_doc":"http://www.ecma-international.org/ecma-262/5.1/#sec-15.2.3.2","full_description":"/*\n\n\tObject\n\n\tgetPrototypeOf ( o: Object )\n\n\tReturn Type:\n\tObject\n\n\tDescription:\n\t15.2.3.2 Object.getPrototypeOf (\r\n            O )\r\n\r\n        When the getPrototypeOf function is called with argument O, the following steps are taken:\r\n\r\n        \r\n          If Type(O) is not Object throw a TypeError exception.\r\n          Return the value of the [[Prototype]] internal property of O.\n\n\tURL doc:\n\thttp://www.ecma-international.org/ecma-262/5.1/#sec-15.2.3.2\n\n*/"}],["description-Object_defineProperty\tObject",{"name":"defineProperty","return_type":"Object","parameters":[{"name":"o","type":"Object","is_optional":false,"description":""},{"name":"p","type":"string","is_optional":false,"description":""},{"name":"attrs","type":"any","is_optional":false,"description":""}],"description":"The defineProperty function is used to add an own property and/or update the attributes of an existing own property of an object.","is_static":true,"type":"operation","url_doc":"http://html5index.org/ECMAScript%20-%20Object.html#defineProperty","full_description":"/*\n\n\tObject\n\n\tdefineProperty ( o: Object, p: string, attrs: any )\n\n\tReturn Type:\n\tObject\n\n\tDescription:\n\tThe defineProperty function is used to add an own property and/or update the attributes of an existing own property of an object.\n\n\tURL doc:\n\thttp://html5index.org/ECMAScript%20-%20Object.html#defineProperty\n\n*/"}],["description-Object_defineProperties\tObject",{"name":"defineProperties","return_type":"Object","parameters":[{"name":"o","type":"Object","is_optional":false,"description":""},{"name":"props","type":"any","is_optional":false,"description":""}],"description":"The defineProperties function is used to add own properties and/or update the attributes of existing own properties of an object.","is_static":true,"type":"operation","url_doc":"http://html5index.org/ECMAScript%20-%20Object.html#defineProperties","full_description":"/*\n\n\tObject\n\n\tdefineProperties ( o: Object, props: any )\n\n\tReturn Type:\n\tObject\n\n\tDescription:\n\tThe defineProperties function is used to add own properties and/or update the attributes of existing own properties of an object.\n\n\tURL doc:\n\thttp://html5index.org/ECMAScript%20-%20Object.html#defineProperties\n\n*/"}],["description-Object_create\tObject",{"name":"create","return_type":"Object","parameters":[{"name":"o","type":"Object","is_optional":false,"description":""},{"name":"properties","type":"any","is_optional":true,"description":""}],"description":"The create function creates a new object with a specified prototype.","is_static":true,"type":"operation","url_doc":"http://html5index.org/ECMAScript%20-%20Object.html#create","full_description":"/*\n\n\tObject\n\n\tcreate ( o: Object, properties?: any )\n\n\tReturn Type:\n\tObject\n\n\tDescription:\n\tThe create function creates a new object with a specified prototype.\n\n\tURL doc:\n\thttp://html5index.org/ECMAScript%20-%20Object.html#create\n\n*/"}],["description-Object\tObject",{"name":"Object","return_type":"Object","parameters":[{"name":"value","type":"any","is_optional":true,"description":""}],"description":"","type":"constructor","url_doc":"http://html5index.org/ECMAScript%20-%20Object.html#Object","full_description":"/*\n\n\tObject\n\n\tObject ( value?: any )\n\n\tReturn Type:\n\tObject\n\n\tDescription:\n\t\n\n\tURL doc:\n\thttp://html5index.org/ECMAScript%20-%20Object.html#Object\n\n*/"}]]}
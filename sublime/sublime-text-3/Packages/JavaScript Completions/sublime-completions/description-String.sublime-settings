{"scope":"source.js","completions":[["description-replace\tString",{"name":"replace","return_type":"string","parameters":[{"name":"searchValue","type":"string","is_optional":false,"description":""},{"name":"replaceValue","type":"string","is_optional":false,"description":""}],"description":"15.5.4.11\r\n            String.prototype.replace (searchValue, replaceValue)\r\n\r\n        First set string according to the following steps:\r\n\r\n        \r\n          Call CheckObjectCoercible passing the this value as its argument.\r\n          Let string be the result of calling ToString, giving it the this value as its\r\n              argument.\r\n        \r\n\r\n        If searchValue is a regular expression (an object whose [[Class]] internal property is\r\n        \"RegExp\"), do the following: If searchValue.global is false, then search string\r\n        for the first match of the regular expression searchValue. If searchValue.global is true,\r\n        then search string for all matches of the regular expression searchValue. Do the search in the same\r\n        manner as in String.prototype.match, including the update of searchValue.lastIndex.\r\n        Let m be the number of left capturing parentheses in searchValue (using NcapturingParens as specified in 15.10.2.1).\r\n\r\n        If searchValue is not a regular expression, let searchString be ToString(searchValue) and search string for the first\r\n        occurrence of searchString. Let m be 0.\r\n\r\n        If replaceValue is a function, then for each matched substring, call the function with the following\r\n        m + 3 arguments. Argument 1 is the substring that matched. If searchValue is a regular expression,\r\n        the next m arguments are all of the captures in the MatchResult (see 15.10.2.1).\r\n        Argument m + 2 is the offset within string where the match occurred, and argument m + 3\r\n        is string. The result is a String value derived from the original input by replacing each matched substring\r\n        with the corresponding return value of the function call, converted to a String if need be.\r\n\r\n        Otherwise, let newstring denote the result of converting replaceValue to a String. The result is\r\n        a String value derived from the original input String by replacing each matched substring with a String derived from\r\n        newstring by replacing characters in newstring by replacement text as specified in Table 22. These\r\n        $ replacements are done left-to-right, and, once such a replacement is performed, the new replacement text is\r\n        not subject to further replacements. For example, \"$1,$2\".replace(/(\\$(\\d))/g, \"$$1-$1$2\") returns\r\n        \"$1-$11,$1-$22\". A $ in newstring that does not match any of the forms below is left\r\n        as is.\r\n\r\n        \r\n          Table 22 — Replacement Text Symbol Substitutions\r\n          \r\n            \r\n              Characters\r\n              Replacement text\r\n            \r\n            \r\n              $$\r\n              $\r\n            \r\n            \r\n              $&\r\n              The matched substring.\r\n            \r\n            \r\n              $‘\r\n              The portion of string that precedes the matched substring.\r\n            \r\n            \r\n              $’\r\n              The portion of string that follows the matched substring.\r\n            \r\n            \r\n              $n\r\n              The nth capture, where n is a single digit in the range 1 to 9 and $n is not followed by a decimal digit. If n≤m and the nth capture is undefined, use the empty String instead. If n>m, the result is implementation-defined.\r\n            \r\n            \r\n              $nn\r\n              The nnth capture, where nn is a two-digit decimal number in the range 01 to 99. If nn≤m and the nnth capture is undefined, use the empty String instead. If nn>m, the result is implementation-defined.\r\n            \r\n          \r\n        \r\n\r\n        \r\n          NOTE The replace function is intentionally generic; it does not require that its\r\n          this value be a String object. Therefore, it can be transferred to other kinds of objects for use as a\r\n          method.","is_static":false,"type":"operation","url_doc":"http://www.ecma-international.org/ecma-262/5.1/#sec-15.5.4.11","full_description":"/*\n\n\tString\n\n\treplace ( searchValue: string, replaceValue: string )\n\n\tReturn Type:\n\tstring\n\n\tDescription:\n\t15.5.4.11\r\n            String.prototype.replace (searchValue, replaceValue)\r\n\r\n        First set string according to the following steps:\r\n\r\n        \r\n          Call CheckObjectCoercible passing the this value as its argument.\r\n          Let string be the result of calling ToString, giving it the this value as its\r\n              argument.\r\n        \r\n\r\n        If searchValue is a regular expression (an object whose [[Class]] internal property is\r\n        \"RegExp\"), do the following: If searchValue.global is false, then search string\r\n        for the first match of the regular expression searchValue. If searchValue.global is true,\r\n        then search string for all matches of the regular expression searchValue. Do the search in the same\r\n        manner as in String.prototype.match, including the update of searchValue.lastIndex.\r\n        Let m be the number of left capturing parentheses in searchValue (using NcapturingParens as specified in 15.10.2.1).\r\n\r\n        If searchValue is not a regular expression, let searchString be ToString(searchValue) and search string for the first\r\n        occurrence of searchString. Let m be 0.\r\n\r\n        If replaceValue is a function, then for each matched substring, call the function with the following\r\n        m + 3 arguments. Argument 1 is the substring that matched. If searchValue is a regular expression,\r\n        the next m arguments are all of the captures in the MatchResult (see 15.10.2.1).\r\n        Argument m + 2 is the offset within string where the match occurred, and argument m + 3\r\n        is string. The result is a String value derived from the original input by replacing each matched substring\r\n        with the corresponding return value of the function call, converted to a String if need be.\r\n\r\n        Otherwise, let newstring denote the result of converting replaceValue to a String. The result is\r\n        a String value derived from the original input String by replacing each matched substring with a String derived from\r\n        newstring by replacing characters in newstring by replacement text as specified in Table 22. These\r\n        $ replacements are done left-to-right, and, once such a replacement is performed, the new replacement text is\r\n        not subject to further replacements. For example, \"$1,$2\".replace(/(\\$(\\d))/g, \"$$1-$1$2\") returns\r\n        \"$1-$11,$1-$22\". A $ in newstring that does not match any of the forms below is left\r\n        as is.\r\n\r\n        \r\n          Table 22 — Replacement Text Symbol Substitutions\r\n          \r\n            \r\n              Characters\r\n              Replacement text\r\n            \r\n            \r\n              $$\r\n              $\r\n            \r\n            \r\n              $&\r\n              The matched substring.\r\n            \r\n            \r\n              $‘\r\n              The portion of string that precedes the matched substring.\r\n            \r\n            \r\n              $’\r\n              The portion of string that follows the matched substring.\r\n            \r\n            \r\n              $n\r\n              The nth capture, where n is a single digit in the range 1 to 9 and $n is not followed by a decimal digit. If n≤m and the nth capture is undefined, use the empty String instead. If n>m, the result is implementation-defined.\r\n            \r\n            \r\n              $nn\r\n              The nnth capture, where nn is a two-digit decimal number in the range 01 to 99. If nn≤m and the nnth capture is undefined, use the empty String instead. If nn>m, the result is implementation-defined.\r\n            \r\n          \r\n        \r\n\r\n        \r\n          NOTE The replace function is intentionally generic; it does not require that its\r\n          this value be a String object. Therefore, it can be transferred to other kinds of objects for use as a\r\n          method.\n\n\tURL doc:\n\thttp://www.ecma-international.org/ecma-262/5.1/#sec-15.5.4.11\n\n*/"}],["description-match\tString",{"name":"match","return_type":"Array","parameters":[{"name":"regexp","type":"any","is_optional":false,"description":""}],"description":"15.5.4.10 String.prototype.match\r\n            (regexp)\r\n\r\n        When the match method is called with argument regexp, the following steps are taken:\r\n\r\n        \r\n          Call CheckObjectCoercible passing the this value as its argument.\r\n          Let S be the result of calling ToString, giving it the this value as its\r\n              argument.\r\n          If Type(regexp) is Object and the value of the [[Class]] internal property of\r\n              regexp is \"RegExp\", then let rx be regexp;\r\n          Else, let rx be a new RegExp object created as if by the expression new\r\n              RegExp(regexp) where RegExp is the standard built-in constructor with that\r\n              name.\r\n          Let global be the result of calling the [[Get]] internal method of rx with argument\r\n              \"global\".\r\n          Let exec be the standard built-in function RegExp.prototype.exec (see\r\n              15.10.6.2)\r\n          If global is not true, then\r\n            \r\n              Return the result of calling the [[Call]] internal method of exec with rx as the this value\r\n                  and argument list containing S.\r\n            \r\n          \r\n          Else, global is true\r\n            \r\n              Call the [[Put]] internal method of rx with arguments \"lastIndex\" and 0.\r\n              Let A be a new array created as if by the expression new Array() where Array is\r\n                  the standard built-in constructor with that name.\r\n              Let previousLastIndex be 0.\r\n              Let n be 0.\r\n              Let lastMatch be true.\r\n              Repeat, while lastMatch is true\r\n                \r\n                  Let result be the result of calling the [[Call]] internal method of exec with rx as the\r\n                      this value and argument list containing S.\r\n                  If result is null, then set lastMatch to false.\r\n                  Else, result is not null\r\n                    \r\n                      Let thisIndex  be the result of calling the [[Get]] internal method of rx with argument\r\n                          \"lastIndex\".\r\n                      If thisIndex = previousLastIndex then\r\n                        \r\n                          Call the [[Put]] internal method of rx with arguments \"lastIndex\" and\r\n                              thisIndex+1.\r\n                          Set previousLastIndex to thisIndex+1.\r\n                        \r\n                      \r\n                      Else, set previousLastIndex to thisIndex.\r\n                      Let matchStr be the result of calling the [[Get]] internal method of result with argument\r\n                          \"0\".\r\n                      Call the [[DefineOwnProperty]] internal method of A with arguments ToString(n), the Property Descriptor {[[Value]]:\r\n                          matchStr, [[Writable]]: true, [[Enumerable]]: true, [[configurable]]: true},\r\n                          and false.\r\n                      Increment n.\r\n                    \r\n                  \r\n                \r\n              \r\n              If n = 0, then return null.\r\n              Return A.\r\n            \r\n          \r\n        \r\n\r\n        \r\n          NOTE The match function is intentionally generic; it does not require that its\r\n          this value be a String object. Therefore, it can be transferred to other kinds of objects for use as a\r\n          method.","is_static":false,"type":"operation","url_doc":"http://www.ecma-international.org/ecma-262/5.1/#sec-15.5.4.10","full_description":"/*\n\n\tString\n\n\tmatch ( regexp: any )\n\n\tReturn Type:\n\tArray\n\n\tDescription:\n\t15.5.4.10 String.prototype.match\r\n            (regexp)\r\n\r\n        When the match method is called with argument regexp, the following steps are taken:\r\n\r\n        \r\n          Call CheckObjectCoercible passing the this value as its argument.\r\n          Let S be the result of calling ToString, giving it the this value as its\r\n              argument.\r\n          If Type(regexp) is Object and the value of the [[Class]] internal property of\r\n              regexp is \"RegExp\", then let rx be regexp;\r\n          Else, let rx be a new RegExp object created as if by the expression new\r\n              RegExp(regexp) where RegExp is the standard built-in constructor with that\r\n              name.\r\n          Let global be the result of calling the [[Get]] internal method of rx with argument\r\n              \"global\".\r\n          Let exec be the standard built-in function RegExp.prototype.exec (see\r\n              15.10.6.2)\r\n          If global is not true, then\r\n            \r\n              Return the result of calling the [[Call]] internal method of exec with rx as the this value\r\n                  and argument list containing S.\r\n            \r\n          \r\n          Else, global is true\r\n            \r\n              Call the [[Put]] internal method of rx with arguments \"lastIndex\" and 0.\r\n              Let A be a new array created as if by the expression new Array() where Array is\r\n                  the standard built-in constructor with that name.\r\n              Let previousLastIndex be 0.\r\n              Let n be 0.\r\n              Let lastMatch be true.\r\n              Repeat, while lastMatch is true\r\n                \r\n                  Let result be the result of calling the [[Call]] internal method of exec with rx as the\r\n                      this value and argument list containing S.\r\n                  If result is null, then set lastMatch to false.\r\n                  Else, result is not null\r\n                    \r\n                      Let thisIndex  be the result of calling the [[Get]] internal method of rx with argument\r\n                          \"lastIndex\".\r\n                      If thisIndex = previousLastIndex then\r\n                        \r\n                          Call the [[Put]] internal method of rx with arguments \"lastIndex\" and\r\n                              thisIndex+1.\r\n                          Set previousLastIndex to thisIndex+1.\r\n                        \r\n                      \r\n                      Else, set previousLastIndex to thisIndex.\r\n                      Let matchStr be the result of calling the [[Get]] internal method of result with argument\r\n                          \"0\".\r\n                      Call the [[DefineOwnProperty]] internal method of A with arguments ToString(n), the Property Descriptor {[[Value]]:\r\n                          matchStr, [[Writable]]: true, [[Enumerable]]: true, [[configurable]]: true},\r\n                          and false.\r\n                      Increment n.\r\n                    \r\n                  \r\n                \r\n              \r\n              If n = 0, then return null.\r\n              Return A.\r\n            \r\n          \r\n        \r\n\r\n        \r\n          NOTE The match function is intentionally generic; it does not require that its\r\n          this value be a String object. Therefore, it can be transferred to other kinds of objects for use as a\r\n          method.\n\n\tURL doc:\n\thttp://www.ecma-international.org/ecma-262/5.1/#sec-15.5.4.10\n\n*/"}],["description-toLowerCase\tString",{"name":"toLowerCase","return_type":"string","parameters":[],"description":"15.5.4.16\r\n            String.prototype.toLowerCase ( )\r\n\r\n        The following steps are taken:\r\n\r\n        \r\n          Call CheckObjectCoercible passing the this value as its argument.\r\n          Let S be the result of calling ToString, giving it the this value as its\r\n              argument.\r\n          Let L be a String where each character of L is either the Unicode lowercase equivalent of the\r\n              corresponding character of S or the actual corresponding character of S if no Unicode lowercase\r\n              equivalent exists.\r\n          Return L.\r\n        \r\n\r\n        For the purposes of this operation, the 16-bit code units of the Strings are treated as code points in the Unicode\r\n        Basic Multilingual Plane. Surrogate code points are directly transferred from S to L without any\r\n        mapping.\r\n\r\n        The result must be derived according to the case mappings in the Unicode character database (this\r\n        explicitly includes not only the UnicodeData.txt file, but also the SpecialCasings.txt file that accompanies it in Unicode\r\n        2.1.8 and later).\r\n\r\n        \r\n          NOTE 1 The case mapping of some characters may produce multiple characters.  In this case the\r\n          result String may not be the same length as the source String. Because both toUpperCase and\r\n          toLowerCase have context-sensitive behaviour, the functions are not symmetrical. In other words,\r\n          s.toUpperCase().toLowerCase() is not necessarily equal to s.toLowerCase().\r\n        \r\n\r\n        \r\n          NOTE 2 The toLowerCase function is intentionally generic; it does not require\r\n          that its this value be a String object. Therefore, it can be transferred to other kinds of objects for use as a\r\n          method.","is_static":false,"type":"operation","url_doc":"http://www.ecma-international.org/ecma-262/5.1/#sec-15.5.4.16","full_description":"/*\n\n\tString\n\n\ttoLowerCase ()\n\n\tReturn Type:\n\tstring\n\n\tDescription:\n\t15.5.4.16\r\n            String.prototype.toLowerCase ( )\r\n\r\n        The following steps are taken:\r\n\r\n        \r\n          Call CheckObjectCoercible passing the this value as its argument.\r\n          Let S be the result of calling ToString, giving it the this value as its\r\n              argument.\r\n          Let L be a String where each character of L is either the Unicode lowercase equivalent of the\r\n              corresponding character of S or the actual corresponding character of S if no Unicode lowercase\r\n              equivalent exists.\r\n          Return L.\r\n        \r\n\r\n        For the purposes of this operation, the 16-bit code units of the Strings are treated as code points in the Unicode\r\n        Basic Multilingual Plane. Surrogate code points are directly transferred from S to L without any\r\n        mapping.\r\n\r\n        The result must be derived according to the case mappings in the Unicode character database (this\r\n        explicitly includes not only the UnicodeData.txt file, but also the SpecialCasings.txt file that accompanies it in Unicode\r\n        2.1.8 and later).\r\n\r\n        \r\n          NOTE 1 The case mapping of some characters may produce multiple characters.  In this case the\r\n          result String may not be the same length as the source String. Because both toUpperCase and\r\n          toLowerCase have context-sensitive behaviour, the functions are not symmetrical. In other words,\r\n          s.toUpperCase().toLowerCase() is not necessarily equal to s.toLowerCase().\r\n        \r\n\r\n        \r\n          NOTE 2 The toLowerCase function is intentionally generic; it does not require\r\n          that its this value be a String object. Therefore, it can be transferred to other kinds of objects for use as a\r\n          method.\n\n\tURL doc:\n\thttp://www.ecma-international.org/ecma-262/5.1/#sec-15.5.4.16\n\n*/"}],["description-search\tString",{"name":"search","return_type":"int","parameters":[{"name":"regexp","type":"any","is_optional":false,"description":""}],"description":"15.5.4.12\r\n            String.prototype.search (regexp)\r\n\r\n        When the search method is called with argument regexp, the following steps are taken:\r\n\r\n        \r\n          Call CheckObjectCoercible passing the this value as its argument.\r\n          Let string be the result of calling ToString, giving it the this value as its\r\n              argument.\r\n          If Type(regexp) is Object and the value of the [[Class]] internal property of\r\n              regexp is \"RegExp\", then let rx be regexp;\r\n          Else, let rx be a new RegExp object created as if by the expression new\r\n              RegExp(regexp) where RegExp is the standard built-in constructor with that\r\n              name.\r\n          Search the value string from its beginning for an occurrence of the regular expression pattern rx. Let\r\n              result be a Number indicating the offset within string where the pattern matched, or –1 if there\r\n              was no match. The lastIndex and global properties of regexp are ignored when\r\n              performing the search. The lastIndex property of regexp is left unchanged.\r\n          Return result.\r\n        \r\n\r\n        \r\n          NOTE The search function is intentionally generic; it does not require that its\r\n          this value be a String object. Therefore, it can be transferred to other kinds of objects for use as a\r\n          method.","is_static":false,"type":"operation","url_doc":"http://www.ecma-international.org/ecma-262/5.1/#sec-15.5.4.12","full_description":"/*\n\n\tString\n\n\tsearch ( regexp: any )\n\n\tReturn Type:\n\tint\n\n\tDescription:\n\t15.5.4.12\r\n            String.prototype.search (regexp)\r\n\r\n        When the search method is called with argument regexp, the following steps are taken:\r\n\r\n        \r\n          Call CheckObjectCoercible passing the this value as its argument.\r\n          Let string be the result of calling ToString, giving it the this value as its\r\n              argument.\r\n          If Type(regexp) is Object and the value of the [[Class]] internal property of\r\n              regexp is \"RegExp\", then let rx be regexp;\r\n          Else, let rx be a new RegExp object created as if by the expression new\r\n              RegExp(regexp) where RegExp is the standard built-in constructor with that\r\n              name.\r\n          Search the value string from its beginning for an occurrence of the regular expression pattern rx. Let\r\n              result be a Number indicating the offset within string where the pattern matched, or –1 if there\r\n              was no match. The lastIndex and global properties of regexp are ignored when\r\n              performing the search. The lastIndex property of regexp is left unchanged.\r\n          Return result.\r\n        \r\n\r\n        \r\n          NOTE The search function is intentionally generic; it does not require that its\r\n          this value be a String object. Therefore, it can be transferred to other kinds of objects for use as a\r\n          method.\n\n\tURL doc:\n\thttp://www.ecma-international.org/ecma-262/5.1/#sec-15.5.4.12\n\n*/"}],["description-trim\tString",{"name":"trim","return_type":"string","parameters":[],"description":"15.5.4.20 String.prototype.trim\r\n            ( )\r\n\r\n        The following steps are taken:\r\n\r\n        \r\n          Call CheckObjectCoercible passing the this value as its argument.\r\n          Let S be the result of calling ToString, giving it the this value as its\r\n              argument.\r\n          Let T be a String value that is a copy of S with both leading and trailing white space removed. The\r\n              definition of white space is the union of WhiteSpace and LineTerminator.\r\n          Return T.\r\n        \r\n\r\n        \r\n          NOTE The trim function is intentionally generic; it does not require that its\r\n          this value be a String object. Therefore, it can be transferred to other kinds of objects for use as a\r\n          method.","is_static":false,"type":"operation","url_doc":"http://www.ecma-international.org/ecma-262/5.1/#sec-15.5.4.20","full_description":"/*\n\n\tString\n\n\ttrim ()\n\n\tReturn Type:\n\tstring\n\n\tDescription:\n\t15.5.4.20 String.prototype.trim\r\n            ( )\r\n\r\n        The following steps are taken:\r\n\r\n        \r\n          Call CheckObjectCoercible passing the this value as its argument.\r\n          Let S be the result of calling ToString, giving it the this value as its\r\n              argument.\r\n          Let T be a String value that is a copy of S with both leading and trailing white space removed. The\r\n              definition of white space is the union of WhiteSpace and LineTerminator.\r\n          Return T.\r\n        \r\n\r\n        \r\n          NOTE The trim function is intentionally generic; it does not require that its\r\n          this value be a String object. Therefore, it can be transferred to other kinds of objects for use as a\r\n          method.\n\n\tURL doc:\n\thttp://www.ecma-international.org/ecma-262/5.1/#sec-15.5.4.20\n\n*/"}],["description-String_fromCharCode\tString",{"name":"fromCharCode","return_type":"string","parameters":[{"name":"chars...","type":"int","is_optional":false,"description":""}],"description":"Returns a String value containing as many characters as the number of arguments. Each argument specifies one character of the resulting String, with the first argument specifying the first character, and so on, from left to right. An argument is converted to a character by applying the operation ToUint16 (9.7) and regarding the resulting 16-bit integer as the code unit value of a character.","is_static":true,"type":"operation","url_doc":"http://html5index.org/ECMAScript%20-%20String.html#fromCharCode","full_description":"/*\n\n\tString\n\n\tfromCharCode ( chars...: int )\n\n\tReturn Type:\n\tstring\n\n\tDescription:\n\tReturns a String value containing as many characters as the number of arguments. Each argument specifies one character of the resulting String, with the first argument specifying the first character, and so on, from left to right. An argument is converted to a character by applying the operation ToUint16 (9.7) and regarding the resulting 16-bit integer as the code unit value of a character.\n\n\tURL doc:\n\thttp://html5index.org/ECMAScript%20-%20String.html#fromCharCode\n\n*/"}],["description-toLocaleUpperCase\tString",{"name":"toLocaleUpperCase","return_type":"string","parameters":[],"description":"This function works exactly the same as toUpperCase except that its result is intended to yield the correct result for the host environment’s current locale, rather than a locale-independent result. There will only be a difference in the few cases (such as Turkish) where the rules for that language conflict with the regular Unicode case mappings.","is_static":false,"type":"operation","url_doc":"http://html5index.org/ECMAScript%20-%20String.html#toLocaleUpperCase","full_description":"/*\n\n\tString\n\n\ttoLocaleUpperCase ()\n\n\tReturn Type:\n\tstring\n\n\tDescription:\n\tThis function works exactly the same as toUpperCase except that its result is intended to yield the correct result for the host environment’s current locale, rather than a locale-independent result. There will only be a difference in the few cases (such as Turkish) where the rules for that language conflict with the regular Unicode case mappings.\n\n\tURL doc:\n\thttp://html5index.org/ECMAScript%20-%20String.html#toLocaleUpperCase\n\n*/"}],["description-toLocaleLowerCase\tString",{"name":"toLocaleLowerCase","return_type":"string","parameters":[],"description":"This function works exactly the same as toLowerCase except that its result is intended to yield the correct result for the host environment’s current locale, rather than a locale-independent result. There will only be a difference in the few cases (such as Turkish) where the rules for that language conflict with the regular Unicode case mappings.","is_static":false,"type":"operation","url_doc":"http://html5index.org/ECMAScript%20-%20String.html#toLocaleLowerCase","full_description":"/*\n\n\tString\n\n\ttoLocaleLowerCase ()\n\n\tReturn Type:\n\tstring\n\n\tDescription:\n\tThis function works exactly the same as toLowerCase except that its result is intended to yield the correct result for the host environment’s current locale, rather than a locale-independent result. There will only be a difference in the few cases (such as Turkish) where the rules for that language conflict with the regular Unicode case mappings.\n\n\tURL doc:\n\thttp://html5index.org/ECMAScript%20-%20String.html#toLocaleLowerCase\n\n*/"}],["description-split\tString",{"name":"split","return_type":"string","parameters":[{"name":"separator","type":"string","is_optional":false,"description":""},{"name":"limit","type":"int","is_optional":false,"description":""}],"description":"Returns an Array object into which substrings of the result of converting this object to a String have been stored. The substrings are determined by searching from left to right for occurrences of separator; these occurrences are not part of any substring in the returned array, but serve to divide up the String value.","is_static":false,"type":"operation","url_doc":"http://html5index.org/ECMAScript%20-%20String.html#split","full_description":"/*\n\n\tString\n\n\tsplit ( separator: string, limit: int )\n\n\tReturn Type:\n\tstring\n\n\tDescription:\n\tReturns an Array object into which substrings of the result of converting this object to a String have been stored. The substrings are determined by searching from left to right for occurrences of separator; these occurrences are not part of any substring in the returned array, but serve to divide up the String value.\n\n\tURL doc:\n\thttp://html5index.org/ECMAScript%20-%20String.html#split\n\n*/"}],["description-substring\tString",{"name":"substring","return_type":"string","parameters":[{"name":"start","type":"int","is_optional":false,"description":""},{"name":"end","type":"int","is_optional":false,"description":""}],"description":"The substring method takes two arguments, start and end, and returns a substring of the result of converting this object to a String, starting from character position start and running to, but not including, character position end of the String (or through the end of the String is end is undefined).","is_static":false,"type":"operation","url_doc":"http://html5index.org/ECMAScript%20-%20String.html#substring","full_description":"/*\n\n\tString\n\n\tsubstring ( start: int, end: int )\n\n\tReturn Type:\n\tstring\n\n\tDescription:\n\tThe substring method takes two arguments, start and end, and returns a substring of the result of converting this object to a String, starting from character position start and running to, but not including, character position end of the String (or through the end of the String is end is undefined).\n\n\tURL doc:\n\thttp://html5index.org/ECMAScript%20-%20String.html#substring\n\n*/"}],["description-slice\tString",{"name":"slice","return_type":"string","parameters":[{"name":"start","type":"int","is_optional":false,"description":""},{"name":"end","type":"int","is_optional":false,"description":""}],"description":"The slice method takes two arguments, start and end, and returns a substring of the result of converting this object to a String, starting from character position start and running to, but not including, character position end (or through the end of the String if end is undefined).","is_static":false,"type":"operation","url_doc":"http://html5index.org/ECMAScript%20-%20String.html#slice","full_description":"/*\n\n\tString\n\n\tslice ( start: int, end: int )\n\n\tReturn Type:\n\tstring\n\n\tDescription:\n\tThe slice method takes two arguments, start and end, and returns a substring of the result of converting this object to a String, starting from character position start and running to, but not including, character position end (or through the end of the String if end is undefined).\n\n\tURL doc:\n\thttp://html5index.org/ECMAScript%20-%20String.html#slice\n\n*/"}],["description-concat\tString",{"name":"concat","return_type":"string","parameters":[{"name":"strings...","type":"string","is_optional":false,"description":""}],"description":"When the concat method is called with zero or more arguments string1, string2, etc., it returns a String consisting of the characters of this object (converted to a String) followed by the characters of each of string1, string2, etc. (where each argument is converted to a String).","is_static":false,"type":"operation","url_doc":"http://html5index.org/ECMAScript%20-%20String.html#concat","full_description":"/*\n\n\tString\n\n\tconcat ( strings...: string )\n\n\tReturn Type:\n\tstring\n\n\tDescription:\n\tWhen the concat method is called with zero or more arguments string1, string2, etc., it returns a String consisting of the characters of this object (converted to a String) followed by the characters of each of string1, string2, etc. (where each argument is converted to a String).\n\n\tURL doc:\n\thttp://html5index.org/ECMAScript%20-%20String.html#concat\n\n*/"}],["description-lastIndexOf\tString",{"name":"lastIndexOf","return_type":"int","parameters":[{"name":"searchString","type":"string","is_optional":false,"description":""},{"name":"position","type":"int","is_optional":true,"description":""}],"description":"If searchString appears as a substring of the result of converting this object to a String at one or more positions that are smaller than or equal to position, then the index of the greatest such position is returned; otherwise, ‑1 is returned.","is_static":false,"type":"operation","url_doc":"http://html5index.org/ECMAScript%20-%20String.html#lastIndexOf","full_description":"/*\n\n\tString\n\n\tlastIndexOf ( searchString: string, position?: int )\n\n\tReturn Type:\n\tint\n\n\tDescription:\n\tIf searchString appears as a substring of the result of converting this object to a String at one or more positions that are smaller than or equal to position, then the index of the greatest such position is returned; otherwise, ‑1 is returned.\n\n\tURL doc:\n\thttp://html5index.org/ECMAScript%20-%20String.html#lastIndexOf\n\n*/"}],["description-indexOf\tString",{"name":"indexOf","return_type":"int","parameters":[{"name":"searchString","type":"string","is_optional":false,"description":""},{"name":"position","type":"int","is_optional":true,"description":""}],"description":"If searchString appears as a substring of the result of converting this object to a String, at one or more positions that are greater than or equal to position, then the index of the smallest such position is returned; otherwise, ‑1 is returned.","is_static":false,"type":"operation","url_doc":"http://html5index.org/ECMAScript%20-%20String.html#indexOf","full_description":"/*\n\n\tString\n\n\tindexOf ( searchString: string, position?: int )\n\n\tReturn Type:\n\tint\n\n\tDescription:\n\tIf searchString appears as a substring of the result of converting this object to a String, at one or more positions that are greater than or equal to position, then the index of the smallest such position is returned; otherwise, ‑1 is returned.\n\n\tURL doc:\n\thttp://html5index.org/ECMAScript%20-%20String.html#indexOf\n\n*/"}],["description-localeCompare\tString",{"name":"localeCompare","return_type":"int","parameters":[{"name":"that","type":"string","is_optional":false,"description":""}],"description":"When the localeCompare method is called with one argument that, it returns a Number other than NaN that represents the result of a locale-sensitive String comparison of the this value (converted to a String) with that (converted to a String).","is_static":false,"type":"operation","url_doc":"http://html5index.org/ECMAScript%20-%20String.html#localeCompare","full_description":"/*\n\n\tString\n\n\tlocaleCompare ( that: string )\n\n\tReturn Type:\n\tint\n\n\tDescription:\n\tWhen the localeCompare method is called with one argument that, it returns a Number other than NaN that represents the result of a locale-sensitive String comparison of the this value (converted to a String) with that (converted to a String).\n\n\tURL doc:\n\thttp://html5index.org/ECMAScript%20-%20String.html#localeCompare\n\n*/"}],["description-charCodeAt\tString",{"name":"charCodeAt","return_type":"int","parameters":[{"name":"pos","type":"int","is_optional":false,"description":""}],"description":"Returns a Number (a nonnegative integer less than 216) representing the code unit value of the character at position pos in the String resulting from converting this object to a String. If there is no character at that position, the result is NaN.","is_static":false,"type":"operation","url_doc":"http://html5index.org/ECMAScript%20-%20String.html#charCodeAt","full_description":"/*\n\n\tString\n\n\tcharCodeAt ( pos: int )\n\n\tReturn Type:\n\tint\n\n\tDescription:\n\tReturns a Number (a nonnegative integer less than 216) representing the code unit value of the character at position pos in the String resulting from converting this object to a String. If there is no character at that position, the result is NaN.\n\n\tURL doc:\n\thttp://html5index.org/ECMAScript%20-%20String.html#charCodeAt\n\n*/"}],["description-charAt\tString",{"name":"charAt","return_type":"string","parameters":[{"name":"pos","type":"int","is_optional":false,"description":""}],"description":"Returns a String containing the character at position pos in the String resulting from converting this object to a String. If there is no character at that position, the result is the empty String. The result is a String value, not a String object.","is_static":false,"type":"operation","url_doc":"http://html5index.org/ECMAScript%20-%20String.html#charAt","full_description":"/*\n\n\tString\n\n\tcharAt ( pos: int )\n\n\tReturn Type:\n\tstring\n\n\tDescription:\n\tReturns a String containing the character at position pos in the String resulting from converting this object to a String. If there is no character at that position, the result is the empty String. The result is a String value, not a String object.\n\n\tURL doc:\n\thttp://html5index.org/ECMAScript%20-%20String.html#charAt\n\n*/"}],["description-toUpperCase\tString",{"name":"toUpperCase","return_type":"string","parameters":[],"description":"This function behaves in exactly the same way as String.prototype.toLowerCase, except that characters are mapped to their uppercase equivalents as specified in the Unicode Character Database.","is_static":false,"type":"operation","url_doc":"http://html5index.org/ECMAScript%20-%20String.html#toUpperCase","full_description":"/*\n\n\tString\n\n\ttoUpperCase ()\n\n\tReturn Type:\n\tstring\n\n\tDescription:\n\tThis function behaves in exactly the same way as String.prototype.toLowerCase, except that characters are mapped to their uppercase equivalents as specified in the Unicode Character Database.\n\n\tURL doc:\n\thttp://html5index.org/ECMAScript%20-%20String.html#toUpperCase\n\n*/"}],["description-toString\tString",{"name":"toString","return_type":"string","parameters":[],"description":"Returns this String value. (Note that, for a String object, the toString method happens to return the same thing as the valueOf method.)","is_static":false,"type":"operation","url_doc":"http://html5index.org/ECMAScript%20-%20String.html#toString","full_description":"/*\n\n\tString\n\n\ttoString ()\n\n\tReturn Type:\n\tstring\n\n\tDescription:\n\tReturns this String value. (Note that, for a String object, the toString method happens to return the same thing as the valueOf method.)\n\n\tURL doc:\n\thttp://html5index.org/ECMAScript%20-%20String.html#toString\n\n*/"}],["description-length\tString",{"name":"length","return_type":"int","description":"The number of characters in the String value represented by this String object.","is_static":false,"type":"property","url_doc":"http://html5index.org/ECMAScript%20-%20String.html#length","full_description":"/*\n\n\tString\n\n\tlength\n\n\tReturn Type:\n\tint\n\n\tDescription:\n\tThe number of characters in the String value represented by this String object.\n\n\tURL doc:\n\thttp://html5index.org/ECMAScript%20-%20String.html#length\n\n*/"}],["description-valueOf\tString",{"name":"valueOf","return_type":"string","parameters":[],"description":"Returns this String value.","is_static":false,"type":"operation","url_doc":"http://html5index.org/ECMAScript%20-%20String.html#valueOf","full_description":"/*\n\n\tString\n\n\tvalueOf ()\n\n\tReturn Type:\n\tstring\n\n\tDescription:\n\tReturns this String value.\n\n\tURL doc:\n\thttp://html5index.org/ECMAScript%20-%20String.html#valueOf\n\n*/"}],["description-String\tString",{"name":"String","return_type":"String","parameters":[{"name":"value","type":"any","is_optional":false,"description":""}],"description":"","type":"constructor","url_doc":"http://html5index.org/ECMAScript%20-%20String.html#String","full_description":"/*\n\n\tString\n\n\tString ( value: any )\n\n\tReturn Type:\n\tString\n\n\tDescription:\n\t\n\n\tURL doc:\n\thttp://html5index.org/ECMAScript%20-%20String.html#String\n\n*/"}]]}